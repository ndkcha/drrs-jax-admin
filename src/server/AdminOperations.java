
package server;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "AdminOperations", targetNamespace = "http://server/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface AdminOperations {


    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteRoom", targetNamespace = "http://server/", className = "server.DeleteRoom")
    @ResponseWrapper(localName = "deleteRoomResponse", targetNamespace = "http://server/", className = "server.DeleteRoomResponse")
    @Action(input = "http://server/AdminOperations/deleteRoomRequest", output = "http://server/AdminOperations/deleteRoomResponse")
    public boolean deleteRoom(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        int arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        List<TimeSlot> arg2);

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "generateAdminId", targetNamespace = "http://server/", className = "server.GenerateAdminId")
    @ResponseWrapper(localName = "generateAdminIdResponse", targetNamespace = "http://server/", className = "server.GenerateAdminIdResponse")
    @Action(input = "http://server/AdminOperations/generateAdminIdRequest", output = "http://server/AdminOperations/generateAdminIdResponse")
    public String generateAdminId();

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "lookupAdmin", targetNamespace = "http://server/", className = "server.LookupAdmin")
    @ResponseWrapper(localName = "lookupAdminResponse", targetNamespace = "http://server/", className = "server.LookupAdminResponse")
    @Action(input = "http://server/AdminOperations/lookupAdminRequest", output = "http://server/AdminOperations/lookupAdminResponse")
    public boolean lookupAdmin(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createRoom", targetNamespace = "http://server/", className = "server.CreateRoom")
    @ResponseWrapper(localName = "createRoomResponse", targetNamespace = "http://server/", className = "server.CreateRoomResponse")
    @Action(input = "http://server/AdminOperations/createRoomRequest", output = "http://server/AdminOperations/createRoomResponse")
    public boolean createRoom(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        int arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        List<TimeSlot> arg2);

    /**
     * 
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "resetBookings", targetNamespace = "http://server/", className = "server.ResetBookings")
    @ResponseWrapper(localName = "resetBookingsResponse", targetNamespace = "http://server/", className = "server.ResetBookingsResponse")
    @Action(input = "http://server/AdminOperations/resetBookingsRequest", output = "http://server/AdminOperations/resetBookingsResponse")
    public boolean resetBookings();

}
